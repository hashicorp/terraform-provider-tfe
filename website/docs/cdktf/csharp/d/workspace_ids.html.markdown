---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_workspace_ids"
description: |-
  Get information on workspace IDs.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: tfe_workspace_ids

Use this data source to get a map of workspace IDs.

## Example Usage

```csharp
using Constructs;
using HashiCorp.Cdktf;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
using Gen.Providers.Tfe;
class MyConvertedCode : TerraformStack
{
    public MyConvertedCode(Construct scope, string name) : base(scope, name)
    {
        new DataTfeWorkspaceIds.DataTfeWorkspaceIds(this, "all", new DataTfeWorkspaceIdsConfig {
            Names = new [] { "*" },
            Organization = "my-org-name"
        });
        new DataTfeWorkspaceIds.DataTfeWorkspaceIds(this, "app-frontend", new DataTfeWorkspaceIdsConfig {
            Names = new [] { "app-frontend-prod", "app-frontend-dev1", "app-frontend-staging" },
            Organization = "my-org-name"
        });
        new DataTfeWorkspaceIds.DataTfeWorkspaceIds(this, "dev_env_tags_only", new DataTfeWorkspaceIdsConfig {
            Organization = "my-org-name",
            TagFilters = new DataTfeWorkspaceIdsTagFilters {
                Include = new Dictionary<string, string> {
                    { "environment", "dev" }
                }
            }
        });
        new DataTfeWorkspaceIds.DataTfeWorkspaceIds(this, "exclude_all_matching_key", new DataTfeWorkspaceIdsConfig {
            Organization = "my-org-name",
            TagFilters = new DataTfeWorkspaceIdsTagFilters {
                Exclude = new Dictionary<string, string> {
                    { "bad_key", "*" }
                }
            }
        });
        new DataTfeWorkspaceIds.DataTfeWorkspaceIds(this, "include_and_exclude", new DataTfeWorkspaceIdsConfig {
            Organization = "my-org-name",
            TagFilters = new DataTfeWorkspaceIdsTagFilters {
                Exclude = new Dictionary<string, string> {
                    { "team", "prodsec" }
                },
                Include = new Dictionary<string, string> {
                    { "region", "us-east-1" }
                }
            }
        });
        new DataTfeWorkspaceIds.DataTfeWorkspaceIds(this, "prod-apps", new DataTfeWorkspaceIdsConfig {
            Organization = "my-org-name",
            TagNames = new [] { "prod", "app", "aws" }
        });
        new DataTfeWorkspaceIds.DataTfeWorkspaceIds(this, "prod-only", new DataTfeWorkspaceIdsConfig {
            ExcludeTags = new [] { "app" },
            Organization = "my-org-name",
            TagNames = new [] { "prod" }
        });
    }
}
```

## Argument Reference

The following arguments are supported. At least one of `Names` or `TagNames` must be present. Both can be used together.

* `Names` - (Optional) A list of workspace names to search for. Names that don't
  match a valid workspace will be omitted from the results, but are not an error.

    To select _all_ workspaces for an organization, provide a list with a single
    asterisk, like `["*"]`. The asterisk also supports partial matching on prefix and/or suffix, like `[*Prod]`, `[test-*]`, `[*dev*]`.
* `TagFilters` - (Optional) A set of key-value tag filters to search for workspaces.
* `TagNames` - (Optional) **Deprecated** A list of tag names to search for.
* `ExcludeTags` - (Optional) **Deprecated** A list of tag names to exclude when searching.
* `Organization` - (Required) Name of the organization.

The `TagFilters` block supports:

* `Include`: (Optional) A map of key-value tags the workspaces must contain. Each tag included here will be combined using a logical AND when filtering results.
* `Exclude`: (Optional) A map of key-value tags to exclude workspaces from the returned list. To exclude all workspaces containing a specific key, use `"*"` as the value.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `FullNames` - A map of workspace names and their full names, which look like `<ORGANIZATION>/<WORKSPACE>`.
* `Ids` - A map of workspace names and their opaque, immutable IDs, which look like `ws-<RANDOM STRING>`.

<!-- cache-key: cdktf-0.17.0-pre.15 input-59fc5c7e05bb6177bb75c0977a805249523a5ecc467f69e0c8d67905a2b343a2 -->