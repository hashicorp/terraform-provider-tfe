---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_oauth_client"
description: |-
  Manages OAuth clients.
---


<!-- Please do not edit this file, it is generated. -->
# tfe_oauth_client

An OAuth Client represents the connection between an organization and a VCS
provider.

-> **Note:** This resource does not currently support creation of Azure DevOps Services OAuth clients.

## Example Usage

Basic usage:

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new tfe.oauthClient.OauthClient(this, "test", {
      apiUrl: "https://api.github.com",
      httpUrl: "https://github.com",
      name: "my-github-oauth-client",
      oauthToken: "my-vcs-provider-token",
      organization: "my-org-name",
      organizationScoped: true,
      serviceProvider: "github",
    });
  }
}

```

#### Azure DevOps Server Usage

See [documentation for HCP Terraform and Terraform Enterprise setup](https://developer.hashicorp.com/terraform/cloud-docs/vcs/azure-devops-server).

**Note:** This resource requires a private key when creating Azure DevOps Server OAuth clients.

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new tfe.oauthClient.OauthClient(this, "test", {
      apiUrl: "https://ado.example.com",
      httpUrl: "https://ado.example.com",
      name: "my-ado-oauth-client",
      oauthToken: "my-vcs-provider-token",
      organization: "my-org-name",
      privateKey:
        "-----BEGIN RSA PRIVATE KEY-----\ncontent\n-----END RSA PRIVATE KEY-----\n",
      serviceProvider: "ado_server",
    });
  }
}

```

#### Bitbucket Data Center Usage

See [documentation for HCP Terraform and Terraform Enterprise setup](https://developer.hashicorp.com/terraform/cloud-docs/vcs/bitbucket-server).

When using Bitbucket Data Center, you must use three required fields: `key`, `secret`, `rsaPublicKey`.


```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new tfe.oauthClient.OauthClient(this, "test", {
      apiUrl: "https://bbdc.example.com",
      httpUrl: "https://bbdc.example.com",
      key: "<consumer key>",
      name: "my-bbdc-oauth-client",
      organization: "my-org-name",
      rsaPublicKey:
        "-----BEGIN PUBLIC KEY-----\ncontent\n-----END PUBLIC KEY-----\n",
      secret:
        "-----BEGIN RSA PRIVATE KEY-----\ncontent\n-----END RSA PRIVATE KEY-----\n",
      serviceProvider: "bitbucket_data_center",
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Optional) Display name for the OAuth Client. Defaults to the `serviceProvider` if not supplied.
* `organization` - (Optional) Name of the organization. If omitted, organization must be defined in the provider config.
* `apiUrl` - (Required) The base URL of your VCS provider's API (e.g.
  `https://apiGithubCom` or `https://gheExampleCom/api/v3`).
* `httpUrl` - (Required) The homepage of your VCS provider (e.g.
  `https://githubCom` or `https://gheExampleCom`).
* `oauthToken` - The token string you were given by your VCS provider, e.g. `ghpXxxxxxxxxxxxxxx` for a GitHub personal access token. For more information on how to generate this token string for your VCS provider, see the [Create an OAuth Client](https://developer.hashicorp.com/terraform/cloud-docs/api-docs/oauth-clients#create-an-oauth-client) documentation.
* `privateKey` - (Required for `adoServer`) The text of the private key associated with your Azure DevOps Server account
* `key` - The OAuth Client key can refer to a Consumer Key, Application Key,
  or another type of client key for the VCS provider.
* `secret` - (Required for `bitbucketDataCenter`) The OAuth Client secret is used for Bitbucket Data Center, this secret is the
  the text of the SSH private key associated with your Bitbucket Data Center
Application Link.
* `rsaPublicKey` - (Required for `bitbucketDataCenter`) Required for Bitbucket
  Data Center in conjunction with the secret. Not used for any other providers. The
text of the SSH public key associated with your Bitbucket Data Center Application
Link.
* `serviceProvider` - (Required) The VCS provider being connected with. Valid
  options are `adoServer`, `adoServices`, `bitbucketDataCenter`, `bitbucketHosted`, `bitbucketServer`(deprecated), `github`, `githubEnterprise`, `gitlabHosted`,
  `gitlabCommunityEdition`, or `gitlabEnterpriseEdition`.
* `agentPoolId` - (Optional) An existing agent pool ID within the organization that has Private VCS support enabled.
* `organizationScoped` - (Optional) Whether or not the oauth client is scoped to all projects and workspaces in the organization. Defaults to `true`.

## Attributes Reference

* `id` - The ID of the OAuth client.
* `oauthTokenId` - The ID of the OAuth token associated with the OAuth client.

<!-- cache-key: cdktf-0.17.0-pre.15 input-26be2bcaedcea0e7d49fb518991e7a5f7d59ff32f8b91e689cbbf463768f9804 -->