---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_project_policy_set"
description: |-
  Add a policy set to a project
---


<!-- Please do not edit this file, it is generated. -->
# tfe_project_policy_set

Adds and removes policy sets from a project

## Example Usage

Basic usage:

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const tfeOrganizationTest = new tfe.organization.Organization(
      this,
      "test",
      {
        email: "admin@company.com",
        name: "my-org-name",
      }
    );
    const tfePolicySetTest = new tfe.policySet.PolicySet(this, "test_1", {
      description: "Some description.",
      name: "my-policy-set",
      organization: cdktf.Token.asString(tfeOrganizationTest.name),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    tfePolicySetTest.overrideLogicalId("test");
    const tfeProjectTest = new tfe.project.Project(this, "test_2", {
      name: "my-project-name",
      organization: cdktf.Token.asString(tfeOrganizationTest.name),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    tfeProjectTest.overrideLogicalId("test");
    const tfeProjectPolicySetTest = new tfe.projectPolicySet.ProjectPolicySet(
      this,
      "test_3",
      {
        policySetId: cdktf.Token.asString(tfePolicySetTest.id),
        projectId: cdktf.Token.asString(tfeProjectTest.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    tfeProjectPolicySetTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

The following arguments are supported:

* `policySetId` - (Required) ID of the policy set.
* `projectId` - (Required) Project ID to add the policy set to.

## Attributes Reference

* `id` - The ID of the policy set attachment. ID format: `<project-id>_<policy-set-id>`

## Import

Project Policy Sets can be imported; use `<ORGANIZATION>/<PROJECT ID>/<POLICY SET NAME>`. For example:

```shell
terraform import tfe_project_policy_set.test 'my-org-name/project/policy-set-name'
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a94d4f5e615194b94eca988f334f60e46c27baa01749b25710f047ee6a038864 -->