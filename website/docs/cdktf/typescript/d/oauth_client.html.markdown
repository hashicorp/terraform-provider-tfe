---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_oauth_client"
description: |-
  Get information on an OAuth client.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: tfe_oauth_client

Use this data source to get information about an OAuth client.

## Example Usage

### Finding an OAuth client by its ID

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new tfe.dataTfeOauthClient.DataTfeOauthClient(this, "client", {
      oauthClientId: "oc-XXXXXXX",
    });
  }
}

```

### Finding an OAuth client by its name

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new tfe.dataTfeOauthClient.DataTfeOauthClient(this, "client", {
      name: "my-oauth-client",
      organization: "my-org",
    });
  }
}

```

### Finding an OAuth client by its service provider

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new tfe.dataTfeOauthClient.DataTfeOauthClient(this, "client", {
      organization: "my-org",
      serviceProvider: "github",
    });
  }
}

```

## Argument Reference

The following arguments are supported. At least one of `name`, `oauthClientId`,
or `serviceProvider` must be set. `name` and `serviceProvider` may be used
together. If either `name` or `serviceProvider` is set, `organization` must also
be set.

* `name` - (Optional) Name of the OAuth client.
* `oauthClientId` - (Optional) ID of the OAuth client.
* `organization` - (Optional) The name of the organization in which to search.
* `serviceProvider` - (Optional) The API identifier of the OAuth service provider. If set,
  must be one of: `adoServer`, `adoServices`, `bitbucketDataCenter`,  `bitbucketHosted`, `bitbucketServer`(deprecated),
  `github`, `githubEnterprise`, `gitlabHosted`, `gitlabCommunityEdition`, or
  `gitlabEnterpriseEdition`.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The OAuth client ID. This will match `oauthClientId`.
* `apiUrl` - The client's API URL.
* `callbackUrl` - OAuth callback URL to provide to the OAuth service provider.
* `createdAt` - The date and time this OAuth client was created in RFC3339 format.
* `httpUrl` - The client's HTTP URL.
* `oauthTokenId` - The ID of the OAuth token associated with the OAuth client.
* `name` - The name of the OAuth client (may be `null`).
* `organization` - The organization in which the OAuth client is registered.
* `serviceProvider` - The API identifier of the OAuth service provider.
* `serviceProviderDisplayName` - The display name of the OAuth service provider.
* `organizationScoped` - Whether or not the agent pool can be used by all workspaces and projects in the organization.
* `projectIds` - IDs of the projects that use the oauth client.
<!-- cache-key: cdktf-0.17.0-pre.15 input-001f05442f17fd9a94d45188c279515be0f5fbe96f6057ed44a16f3e9be03580 -->