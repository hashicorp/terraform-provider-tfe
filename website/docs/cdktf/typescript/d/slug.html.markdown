---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_slug"
description: |-
  Manages files.
---

<!-- Please do not edit this file, it is generated. -->
# Data Source: tfe_slug

This data source is used to represent configuration files on a local filesystem
intended to be uploaded to HCP Terraform and Terraform Enterprise, in lieu of those files being
sourced from a configured VCS provider.

A unique checksum is generated for the specified local directory, which allows
resources such as `tfe_policy_set` track the files and upload a new gzip compressed
tar file containing configuration files (a Terraform "slug") when those files change.

## Example Usage

Tracking a local directory to upload the Sentinel configuration and policies:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataTfeSlug } from "./.gen/providers/tfe/data-tfe-slug";
import { PolicySet } from "./.gen/providers/tfe/policy-set";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new DataTfeSlug(this, "test", {
      sourcePath: "policies/my-policy-set",
    });
    const tfePolicySetTest = new PolicySet(this, "test_1", {
      name: "my-policy-set",
      organization: "my-org-name",
      slug: Token.asStringMap(test),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    tfePolicySetTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

The following arguments are supported:

* `sourcePath` - (Required) The path to the directory where the files are located.

<!-- cache-key: cdktf-0.20.8 input-fa2c542204f0df625488e508b9c38200a5fbba730db218a920e6358651a4f10c -->