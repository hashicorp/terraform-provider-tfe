---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_variables"
description: |-
  Get information on a workspace variables.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: tfe_variables

This data source is used to retrieve all variables defined in a specified workspace

## Example Usage

For workspace variables:

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataTfeWorkspaceTest = new tfe.dataTfeWorkspace.DataTfeWorkspace(
      this,
      "test",
      {
        name: "my-workspace-name",
        organization: "my-org-name",
      }
    );
    const dataTfeVariablesTest = new tfe.dataTfeVariables.DataTfeVariables(
      this,
      "test_1",
      {
        workspaceId: cdktf.Token.asString(dataTfeWorkspaceTest.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataTfeVariablesTest.overrideLogicalId("test");
  }
}

```

For variable set variables:

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataTfeVariableSetTest =
      new tfe.dataTfeVariableSet.DataTfeVariableSet(this, "test", {
        name: "my-variable-set-name",
        organization: "my-org-name",
      });
    const dataTfeVariablesTest = new tfe.dataTfeVariables.DataTfeVariables(
      this,
      "test_1",
      {
        variableSetId: cdktf.Token.asString(dataTfeVariableSetTest.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataTfeVariablesTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

One of following arguments are required:

* `workspaceId` - ID of the workspace.
* `variableSetId` - ID of the workspace.

## Attributes Reference

* `variables` - List containing all terraform and environment variables configured on the workspace
* `terraform` - List containing terraform variables configured on the workspace
* `env` - List containing environment variables configured on the workspace

The `variables, terraform and env` blocks contains:

* `id` - The variable Id
* `name` - The variable Key name
* `value` -  The variable value. If the variable is sensitive this value will be empty.
* `category` -  The category of the variable (terraform or environment)
* `sensitive` - If the variable is marked as sensitive or not
* `hcl` - If the variable is marked as HCL or not

<!-- cache-key: cdktf-0.17.0-pre.15 input-635190fbcaed3640f0f12f181a3eae6abefebcbcad7f5806bfb392bb4097eaef -->