---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_policy_set"
description: |-
  Get information on organization policy sets.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: tfe_policy_set

This data source is used to retrieve a policy set defined in a specified organization.

## Example Usage

For workspace policies:

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new tfe.dataTfePolicySet.DataTfePolicySet(this, "test", {
      name: "my-policy-set-name",
      organization: "my-org-name",
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Name of the policy set.
* `organization` - (Required) Name of the organization.

## Attributes Reference

* `id` - The ID of the policy set.
* `organization` - Name of the organization.
* `name` - Name of the policy set.
* `description` - Description of the policy set.
* `global` - Whether or not the policy set applies to all workspaces in the organization.
* `kind` - The policy-as-code framework for the policy. Valid values are "sentinel" and "opa".
* `agentEnabled` - Whether or not the policy set is run as a policy evaluation within the agent. True by default for all "opa" policy sets.
* `policyToolVersion` - The policy tool version to run the evaluation against.
* `overridable` - Whether users can override this policy when it fails during a run. Only valid for OPA policies.
* `workspaceIds` - IDs of the workspaces that use the policy set.
* `excludedWorkspaceIds` - IDs of the workspaces that do not use the policy set.
* `projectIds` - IDs of the projects that use the policy set.
* `policyIds` - IDs of the policies attached to the policy set.
* `policiesPath` - The sub-path within the attached VCS repository when using `vcsRepo`.
* `vcsRepo` - Settings for the workspace's VCS repository.

The `vcsRepo` block contains:

* `identifier` - A reference to your VCS repository in the format `<vcs organization>/<repository>`
  where `<vcs organization>` and `<repository>` refer to the organization and repository in your VCS
  provider.
* `branch` - The repository branch that Terraform will execute from.
* `ingressSubmodules` - Indicates whether submodules should be fetched when
  cloning the VCS repository.
* `oauthTokenId` - OAuth token ID of the configured VCS connection.


<!-- cache-key: cdktf-0.17.0-pre.15 input-d02c3079dfc63899f78fd83cad73af0b541d3dfa9605f525b0e217acf3e5f6c6 -->