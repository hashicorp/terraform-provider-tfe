---
layout: "tfe"
page_title: "Terraform Enterprise: Ephemeral: tfe_organization_token"
description: |-
  Generates a new organization token that is guaranteed not to be written to
  state.
---


<!-- Please do not edit this file, it is generated. -->
# Ephemeral: tfe_organization_token

Terraform ephemeral resource for managing a TFE organization token. This
resource is used to generate a new organization token that is guaranteed not to
be written to state. Since organization tokens are singleton resources, using this ephemeral resource will replace any existing organization token, including those managed by `tfe_organization_token`.

~> **NOTE:** Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).

## Example Usage

### Generate a new organization token:

This will invalidate any existing organization token.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
  }
}

```

### Generate a new organization token with 30 day expiration:

This will invalidate any existing organization token.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Rotating } from "./.gen/providers/time/rotating";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    /*The following providers are missing schema information and might need manual adjustments to synthesize correctly: time.
    For a more precise conversion please use the --provider flag in convert.*/
    new Rotating(this, "example", {
      rotation_days: 30,
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `organization` - (Optional) Name of the organization. If omitted, organization must be defined in the provider config.

The following arguments are optional:

* `expiredAt` - (Optional) The token's expiration date. The expiration date must be a date/time string in RFC3339 
format (e.g., "2024-12-31T23:59:59Z"). If no expiration date is supplied, the expiration date will default to null and 
never expire.

This ephemeral resource exports the following attributes in addition to the arguments above:

* `token` - The generated token. This value is sensitive and will not be stored
  in state.

<!-- cache-key: cdktf-0.20.8 input-6268243c50e900d0790cc890792dbe4f6e1a26be8b1eeef343446cf7c71b050d -->