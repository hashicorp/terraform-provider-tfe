---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_workspace_ids"
description: |-
  Get information on workspace IDs.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: tfe_workspace_ids

Use this data source to get a map of workspace IDs.

## Example Usage

```java
import software.constructs.*;
import com.hashicorp.cdktf.*;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import gen.providers.tfe.dataTfeWorkspaceIds.*;
public class MyConvertedCode extends TerraformStack {
    public MyConvertedCode(Construct scope, String name) {
        super(scope, name);
        new DataTfeWorkspaceIds(this, "all", new DataTfeWorkspaceIdsConfig()
                .names(List.of("*"))
                .organization("my-org-name")
                );
        new DataTfeWorkspaceIds(this, "app-frontend", new DataTfeWorkspaceIdsConfig()
                .names(List.of("app-frontend-prod", "app-frontend-dev1", "app-frontend-staging"))
                .organization("my-org-name")
                );
        new DataTfeWorkspaceIds(this, "dev_env_tags_only", new DataTfeWorkspaceIdsConfig()
                .organization("my-org-name")
                .tagFilters(new DataTfeWorkspaceIdsTagFilters()
                        .include(Map.of(
                                "environment", "dev"))
                        )
                );
        new DataTfeWorkspaceIds(this, "exclude_all_matching_key", new DataTfeWorkspaceIdsConfig()
                .organization("my-org-name")
                .tagFilters(new DataTfeWorkspaceIdsTagFilters()
                        .exclude(Map.of(
                                "bad_key", "*"))
                        )
                );
        new DataTfeWorkspaceIds(this, "include_and_exclude", new DataTfeWorkspaceIdsConfig()
                .organization("my-org-name")
                .tagFilters(new DataTfeWorkspaceIdsTagFilters()
                        .exclude(Map.of(
                                "team", "prodsec"))
                        .include(Map.of(
                                "region", "us-east-1"))
                        )
                );
        new DataTfeWorkspaceIds(this, "prod-apps", new DataTfeWorkspaceIdsConfig()
                .organization("my-org-name")
                .tagNames(List.of("prod", "app", "aws"))
                );
        new DataTfeWorkspaceIds(this, "prod-only", new DataTfeWorkspaceIdsConfig()
                .excludeTags(List.of("app"))
                .organization("my-org-name")
                .tagNames(List.of("prod"))
                );
    }
}
```

## Argument Reference

The following arguments are supported. At least one of `names` or `tagNames` must be present. Both can be used together.

* `names` - (Optional) A list of workspace names to search for. Names that don't
  match a valid workspace will be omitted from the results, but are not an error.

    To select _all_ workspaces for an organization, provide a list with a single
    asterisk, like `["*"]`. The asterisk also supports partial matching on prefix and/or suffix, like `[*Prod]`, `[test-*]`, `[*dev*]`.
* `tagFilters` - (Optional) A set of key-value tag filters to search for workspaces.
* `tagNames` - (Optional) **Deprecated** A list of tag names to search for.
* `excludeTags` - (Optional) **Deprecated** A list of tag names to exclude when searching.
* `organization` - (Required) Name of the organization.

The `tagFilters` block supports:

* `include`: (Optional) A map of key-value tags the workspaces must contain. Each tag included here will be combined using a logical AND when filtering results.
* `exclude`: (Optional) A map of key-value tags to exclude workspaces from the returned list. To exclude all workspaces containing a specific key, use `"*"` as the value.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `fullNames` - A map of workspace names and their full names, which look like `<ORGANIZATION>/<WORKSPACE>`.
* `ids` - A map of workspace names and their opaque, immutable IDs, which look like `ws-<RANDOM STRING>`.

<!-- cache-key: cdktf-0.17.0-pre.15 input-59fc5c7e05bb6177bb75c0977a805249523a5ecc467f69e0c8d67905a2b343a2 -->