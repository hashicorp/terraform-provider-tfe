---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_project_variable_set"
description: |-
  Add a variable set to a project
---


<!-- Please do not edit this file, it is generated. -->
# tfe_project_variable_set

Adds and removes a project from a variable set's scope.

-> **Note:** This resource controls whether a project has access to a variable set, not whether
a project owns the variable set. Ownership is specified by setting the `parentProjectId` on the
`tfeVariableSet` resource.

## Example Usage

Basic usage:

```java
import software.constructs.*;
import com.hashicorp.cdktf.*;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import gen.providers.tfe.organization.*;
import gen.providers.tfe.project.*;
import gen.providers.tfe.variableSet.*;
import gen.providers.tfe.projectVariableSet.*;
public class MyConvertedCode extends TerraformStack {
    public MyConvertedCode(Construct scope, String name) {
        super(scope, name);
        Organization tfeOrganizationTest = new Organization(this, "test", new OrganizationConfig()
                .email("admin@company.com")
                .name("my-org-name")
                );
        Project tfeProjectTest = new Project(this, "test_1", new ProjectConfig()
                .name("my-project-name")
                .organization(Token.asString(tfeOrganizationTest.getName()))
                );
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeProjectTest.overrideLogicalId("test");
        VariableSet tfeVariableSetTest = new VariableSet(this, "test_2", new VariableSetConfig()
                .description("Some description.")
                .name("Test Varset")
                .organization(Token.asString(tfeOrganizationTest.getName()))
                );
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeVariableSetTest.overrideLogicalId("test");
        ProjectVariableSet tfeProjectVariableSetTest =
        new ProjectVariableSet(this, "test_3", new ProjectVariableSetConfig()
                .projectId(Token.asString(tfeProjectTest.getId()))
                .variableSetId(Token.asString(tfeVariableSetTest.getId()))
                );
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeProjectVariableSetTest.overrideLogicalId("test");
    }
}
```

## Argument Reference

The following arguments are supported:

* `variableSetId` - (Required) Name of the variable set to add.
* `projectId` - (Required) Project ID to add the variable set to.

## Attributes Reference

* `id` - The ID of the variable set attachment. ID format: `<project-id>_<variable-set-id>`

## Import

Project Variable Sets can be imported; use `<ORGANIZATION>/<PROJECT ID>/<VARIABLE SET NAME>`. For example:

```shell
terraform import tfe_project_variable_set.test 'my-org-name/prj-F1NpdVBuCF3xc5Rp/Test Varset'
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-daf47945bcce294b7bb84fb1557fe718d31e19868ca6657bf229429e9d6bb394 -->