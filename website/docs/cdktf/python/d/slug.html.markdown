---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_slug"
description: |-
  Manages files.
---

<!-- Please do not edit this file, it is generated. -->
# Data Source: tfe_slug

This data source is used to represent configuration files on a local filesystem
intended to be uploaded to HCP Terraform and Terraform Enterprise, in lieu of those files being
sourced from a configured VCS provider.

A unique checksum is generated for the specified local directory, which allows
resources such as `tfe_policy_set` track the files and upload a new gzip compressed
tar file containing configuration files (a Terraform "slug") when those files change.

## Example Usage

Tracking a local directory to upload the Sentinel configuration and policies:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.tfe.data_tfe_slug import DataTfeSlug
from imports.tfe.policy_set import PolicySet
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        test = DataTfeSlug(self, "test",
            source_path="policies/my-policy-set"
        )
        tfe_policy_set_test = PolicySet(self, "test_1",
            name="my-policy-set",
            organization="my-org-name",
            slug=Token.as_string_map(test)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        tfe_policy_set_test.override_logical_id("test")
```

## Argument Reference

The following arguments are supported:

* `source_path` - (Required) The path to the directory where the files are located.

<!-- cache-key: cdktf-0.20.8 input-fa2c542204f0df625488e508b9c38200a5fbba730db218a920e6358651a4f10c -->