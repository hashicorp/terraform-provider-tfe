---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_workspace_variable_set"
description: |-
  Add a variable set to a workspace
---


<!-- Please do not edit this file, it is generated. -->
# tfe_workspace_variable_set

Adds and removes a workspace from a variable set's scope.

-> **Note:** `tfe_variable_set` has a deprecated argument `workspace_ids` that should not be used alongside this resource. They attempt to manage the same attachments and are mutually exclusive.

## Example Usage

Basic usage:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.tfe.organization import Organization
from imports.tfe.variable_set import VariableSet
from imports.tfe.workspace import Workspace
from imports.tfe.workspace_variable_set import WorkspaceVariableSet
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        test = Organization(self, "test",
            email="admin@company.com",
            name="my-org-name"
        )
        tfe_variable_set_test = VariableSet(self, "test_1",
            description="Some description.",
            name="Test Varset",
            organization=test.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        tfe_variable_set_test.override_logical_id("test")
        tfe_workspace_test = Workspace(self, "test_2",
            name="my-workspace-name",
            organization=test.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        tfe_workspace_test.override_logical_id("test")
        tfe_workspace_variable_set_test = WorkspaceVariableSet(self, "test_3",
            variable_set_id=Token.as_string(tfe_variable_set_test.id),
            workspace_id=Token.as_string(tfe_workspace_test.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        tfe_workspace_variable_set_test.override_logical_id("test")
```

## Argument Reference

The following arguments are supported:

* `variable_set_id` - (Required) The variable set ID.
* `workspace_id` - (Required) Workspace ID to add the variable set to.

## Attributes Reference

* `id` - The ID of the variable set attachment. ID format: `<workspace-id>_<variable-set-id>`

## Import

Workspace Variable Sets can be imported; use `<ORGANIZATION>/<WORKSPACE NAME>/<VARIABLE SET NAME>`. For example:

```shell
terraform import tfe_workspace_variable_set.test 'my-org-name/workspace/My Variable Set'
```

<!-- cache-key: cdktf-0.20.8 input-6dfe4c82273213a8c39d4cf9a21f083a573d571789d1952df673e7cfe729ed8d -->