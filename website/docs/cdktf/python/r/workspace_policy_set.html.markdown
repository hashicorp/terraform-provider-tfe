---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_workspace_policy_set"
description: |-
  Add a policy set to a workspace
---


<!-- Please do not edit this file, it is generated. -->
# tfe_workspace_policy_set

Adds and removes policy sets from a workspace

-> **Note:** `tfe_policy_set` has an argument `workspace_ids` that should not be used alongside this resource. They attempt to manage the same attachments.

## Example Usage

Basic usage:

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.tfe as tfe
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        tfe_organization_test = tfe.organization.Organization(self, "test",
            email="admin@company.com",
            name="my-org-name"
        )
        tfe_policy_set_test = tfe.policy_set.PolicySet(self, "test_1",
            description="Some description.",
            name="my-policy-set",
            organization=cdktf.Token.as_string(tfe_organization_test.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        tfe_policy_set_test.override_logical_id("test")
        tfe_workspace_test = tfe.workspace.Workspace(self, "test_2",
            name="my-workspace-name",
            organization=cdktf.Token.as_string(tfe_organization_test.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        tfe_workspace_test.override_logical_id("test")
        tfe_workspace_policy_set_test =
        tfe.workspace_policy_set.WorkspacePolicySet(self, "test_3",
            policy_set_id=cdktf.Token.as_string(tfe_policy_set_test.id),
            workspace_id=cdktf.Token.as_string(tfe_workspace_test.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        tfe_workspace_policy_set_test.override_logical_id("test")
```

## Argument Reference

The following arguments are supported:

* `policy_set_id` - (Required) ID of the policy set.
* `workspace_id` - (Required) Workspace ID to add the policy set to.

## Attributes Reference

* `id` - The ID of the policy set attachment. ID format: `<workspace-id>_<policy-set-id>`

## Import

Workspace Policy Sets can be imported; use `<ORGANIZATION>/<WORKSPACE NAME>/<POLICY SET NAME>`. For example:

```shell
terraform import tfe_workspace_policy_set.test 'my-org-name/workspace/policy-set-name'
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-063704782b0ed470f47929ea2ae102aff05366cceeb62a7760562407d4442e44 -->