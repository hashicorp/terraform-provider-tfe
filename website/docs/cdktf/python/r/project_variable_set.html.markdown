---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_project_variable_set"
description: |-
  Add a variable set to a project
---


<!-- Please do not edit this file, it is generated. -->
# tfe_project_variable_set

Adds and removes a project from a variable set's scope.

-> **Note:** This resource controls whether a project has access to a variable set, not whether
a project owns the variable set. Ownership is specified by setting the `parent_project_id` on the
`tfe_variable_set` resource.

## Example Usage

Basic usage:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.tfe.organization import Organization
from imports.tfe.project import Project
from imports.tfe.project_variable_set import ProjectVariableSet
from imports.tfe.variable_set import VariableSet
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        test = Organization(self, "test",
            email="admin@company.com",
            name="my-org-name"
        )
        tfe_project_test = Project(self, "test_1",
            name="my-project-name",
            organization=test.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        tfe_project_test.override_logical_id("test")
        tfe_variable_set_test = VariableSet(self, "test_2",
            description="Some description.",
            name="Test Varset",
            organization=test.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        tfe_variable_set_test.override_logical_id("test")
        tfe_project_variable_set_test = ProjectVariableSet(self, "test_3",
            project_id=Token.as_string(tfe_project_test.id),
            variable_set_id=Token.as_string(tfe_variable_set_test.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        tfe_project_variable_set_test.override_logical_id("test")
```

## Argument Reference

The following arguments are supported:

* `variable_set_id` - (Required) Name of the variable set to add.
* `project_id` - (Required) Project ID to add the variable set to.

## Attributes Reference

* `id` - The ID of the variable set attachment. ID format: `<project-id>_<variable-set-id>`

## Import

Project Variable Sets can be imported; use `<ORGANIZATION>/<PROJECT ID>/<VARIABLE SET NAME>`. For example:

```shell
terraform import tfe_project_variable_set.test 'my-org-name/prj-F1NpdVBuCF3xc5Rp/Test Varset'
```

<!-- cache-key: cdktf-0.20.8 input-daf47945bcce294b7bb84fb1557fe718d31e19868ca6657bf229429e9d6bb394 -->