---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_workspace_variable_set"
description: |-
  Add a variable set to a workspace
---


<!-- Please do not edit this file, it is generated. -->
# tfe_workspace_variable_set

Adds and removes a workspace from a variable set's scope.

-> **Note:** `TfeVariableSet` has a deprecated argument `WorkspaceIds` that should not be used alongside this resource. They attempt to manage the same attachments and are mutually exclusive.

## Example Usage

Basic usage:

```go
import constructs "github.com/aws/constructs-go/constructs"
import "github.com/hashicorp/terraform-cdk-go/cdktf"
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import "github.com/aws-samples/dummy/gen/providers/tfe/organization"
import "github.com/aws-samples/dummy/gen/providers/tfe/variableSet"
import "github.com/aws-samples/dummy/gen/providers/tfe/workspace"
import "github.com/aws-samples/dummy/gen/providers/tfe/workspaceVariableSet"
type myConvertedCode struct {
	terraformStack
}

func newMyConvertedCode(scope construct, name *string) *myConvertedCode {
	this := &myConvertedCode{}
	cdktf.NewTerraformStack_Override(this, scope, name)
	tfeOrganizationTest := organization.NewOrganization(this, jsii.String("test"), &organizationConfig{
		email: jsii.String("admin@company.com"),
		name: jsii.String("my-org-name"),
	})
	tfeVariableSetTest := variableSet.NewVariableSet(this, jsii.String("test_1"), &variableSetConfig{
		description: jsii.String("Some description."),
		name: jsii.String("Test Varset"),
		organization: cdktf.*token_AsString(tfeOrganizationTest.name),
	})
	/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
	tfeVariableSetTest.OverrideLogicalId(jsii.String("test"))
	tfeWorkspaceTest := workspace.NewWorkspace(this, jsii.String("test_2"), &workspaceConfig{
		name: jsii.String("my-workspace-name"),
		organization: cdktf.*token_*AsString(tfeOrganizationTest.name),
	})
	/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
	tfeWorkspaceTest.OverrideLogicalId(jsii.String("test"))
	tfeWorkspaceVariableSetTest :=
	workspaceVariableSet.NewWorkspaceVariableSet(this, jsii.String("test_3"), &workspaceVariableSetConfig{
		variableSetId: cdktf.*token_*AsString(tfeVariableSetTest.id),
		workspaceId: cdktf.*token_*AsString(tfeWorkspaceTest.id),
	})
	/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
	tfeWorkspaceVariableSetTest.OverrideLogicalId(jsii.String("test"))
	return this
}
```

## Argument Reference

The following arguments are supported:

* `VariableSetId` - (Required) The variable set ID.
* `WorkspaceId` - (Required) Workspace ID to add the variable set to.

## Attributes Reference

* `Id` - The ID of the variable set attachment. ID format: `<workspace-id>_<variable-set-id>`

## Import

Workspace Variable Sets can be imported; use `<ORGANIZATION>/<WORKSPACE NAME>/<VARIABLE SET NAME>`. For example:

```shell
terraform import tfe_workspace_variable_set.test 'my-org-name/workspace/My Variable Set'
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-6dfe4c82273213a8c39d4cf9a21f083a573d571789d1952df673e7cfe729ed8d -->